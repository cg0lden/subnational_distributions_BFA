
Number of observations per person
  nr_obs nr_persons
1      1         59
2      2        325
Number of individuals with their number of ZERO intakes
  nr_ZERO_intakes nr_persons
1               0        120
2               1        134
3               2        130


======  Info data and model f.spade  ======


========================================
=====  Extra info about the data   =====
========================================

Number of observations per age
   ((explanation of first column:
    18  is age
    12 is number of observations for age 18 in sample
    1.69 is proportion(%) for age 18 in sample))
       18   19   20   21   22   23   24   25   26   27   28   29   30   31   32   33   34   35   36  37   38   39   40  
nobs 12   11   33   25   42   33   46   42   47   31   38   38   41   28   24   18   27   27   17  16   15   18   16  
%    1.69 1.55 4.65 3.53 5.92 4.65 6.49 5.92 6.63 4.37 5.36 5.36 5.78 3.95 3.39 2.54 3.81 3.81 2.4 2.26 2.12 2.54 2.26
                                                                                                                      
     41   42   43   44   45   46   47   48   49   50   51   53   55   56   61   67  
nobs 4    8    4    6    14   2    4    2    3    4    1    1    4    4    1    2   
%    0.56 1.13 0.56 0.85 1.97 0.28 0.56 0.28 0.42 0.56 0.14 0.14 0.56 0.56 0.14 0.28
                                                                                    

Intake amounts are modelled with all positive intakes
For 1 - part model:
   if there are some zeros,
   these get all a positive value equal to 0.5 * min(positive values)
For 2 - part model:
   all positive amounts are used

f.spade model =  BCNfpBBcs  formula freq =  b12 ~ cs(age) + (1|id) 

f.spade: start modelling intake frequency with
b12 ~ cs(age)


======== Results modelling intake frequency ========

Summary of weights used in gamlss
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      1       1       1       1       1       1 
******************************************************************
Family:  c("BB", "Beta Binomial") 

Call:  gamlss(formula = frml.if.use, family = BB, data = spade.dt.if,  
    weights = gamlss.wghts, method = RS(), control = gamlss.control(trace = FALSE,  
        c.crit = 0.1, n.cyc = 100), i.control = glim.control()) 

Fitting method: RS() 

------------------------------------------------------------------
Mu link function:  logit
Mu Coefficients:
            Estimate Std. Error t value Pr(>|t|)  
(Intercept) -0.60974    0.33074  -1.844    0.066 .
cs(age)      0.01372    0.01070   1.282    0.200  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

------------------------------------------------------------------
Sigma link function:  log
Sigma Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  -0.9505     0.2689  -3.534 0.000459 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

------------------------------------------------------------------
NOTE: Additive smoothing terms exist in the formulas: 
 i) Std. Error for smoothers are for the linear effect only. 
ii) Std. Error for the linear terms may not be reliable. 
------------------------------------------------------------------
No. of observations in the fit:  384 
Degrees of Freedom for the fit:  6.000704
      Residual Deg. of Freedom:  377.9993 
                      at cycle:  3 
 
Global Deviance:     784.6239 
            AIC:     796.6253 
            SBC:     820.332 
******************************************************************

**************************************************************
	 Summary of the Randomised Quantile Residuals

                             check rResiduals theory
1                             mean 0.01661998      0
2                         variance 0.89094539      1
3                coef. of skewness 0.04541911      0
4                coef. of kurtosis 3.39096020      3
5 Filliben_correlation_coefficient 0.99791812      1
**************************************************************
NULL
========================================================

Fit of Box-Cox transformation parameter lambda
  log.lik lambda    LB   UB
1   -1038   0.04 -0.03 0.11


==== Fractional Polynomial model results intake amounts ===

Call:
glm(formula = intake.trans ~ I((age/10)^1), data = spade.dt.ia)

Deviance Residuals: 
   Min      1Q  Median      3Q     Max  
 -3.78   -1.27   -0.08    1.33    4.66  

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)      1.337      0.356     3.8    2e-04 ***
I((age/10)^1)   -0.087      0.114    -0.8      0.4    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for gaussian family taken to be 2.514464)

    Null deviance: 788.50  on 314  degrees of freedom
Residual deviance: 787.03  on 313  degrees of freedom
AIC: 1188

Number of Fisher Scoring iterations: 2

===========================================================

Model results for the intake amounts
Linear mixed model fit by REML ['lmerMod']
Formula: intake.trans ~ I((age/10)^1) + (1 | id)
   Data: spade.dt.ia
Weights: spade.dt.ia[, weights.name]

REML criterion at convergence: 1187.9

Scaled residuals: 
   Min     1Q Median     3Q    Max 
-2.384 -0.803 -0.053  0.838  2.936 

Random effects:
 Groups   Name        Variance Std.Dev.
 id       (Intercept) 0.0      0.0     
 Residual             2.5      1.6     
Number of obs: 315, groups:  id, 234

Fixed effects:
              Estimate Std. Error t value
(Intercept)      1.337      0.356     3.8
I((age/10)^1)   -0.087      0.114    -0.8

Correlation of Fixed Effects:
            (Intr)
I((g/10)^1) -0.968
optimizer (nloptwrap) convergence code: 0 (OK)
boundary (singular) fit: see ?isSingular

f.spade: Model saved in spade_Zambia_wom_model 

f.spade: start f.spade.pseudosampling
model.name = spade_Zambia_wom_model 
f.spade.pseudosampling:
   pseudo sample spade.ps has 38400 rows
f.spade.pseudosampling:
          (weighted ) sample mean = 3.195 
            mean habitual intakes = 3.571 

Statistics for only the positive intakes and habitual amounts
         (weighted ) sample mean = 7.191 
      mean pseudo sample amounts = 8.008 
         (weighted ) sample mean = 0.444 
  pseudo sample mean probability = 0.447 


f.spade: f.spade.backtrans2 started for back-transformation

   within-individual variance  = 2.51
   between-individual variance = 0
   ratio var.inner/var.between for intake amounts = Inf

* * *  Statistics of observed and habitual intakes  * * *
                             (weighted) sample mean intake = 3.195
                          overall mean of habitual intakes = 3.571
    difference of mean HI mean from (weighted) sample mean = 11.776 %

spade output table
        AM P5 P10 P25 P50 P75 P90 P95
(17,67]  4  0   1   2   3   5   7   7
(17,18]  4  0   1   2   3   6   7   8
(18,19]  4  0   1   2   4   6   7   8
(19,20]  4  0   1   2   3   5   7   8
(20,21]  4  0   1   2   3   5   7   7
(21,22]  4  0   1   2   3   5   7   7
(22,23]  3  0   1   2   3   5   7   7
(23,24]  3  0   1   2   3   5   7   7
(24,25]  3  0   1   2   3   5   7   7
(25,26]  3  0   1   2   3   5   7   7
(26,27]  4  0   1   2   3   5   7   7
(27,28]  4  0   1   2   3   5   7   7
(28,29]  4  0   1   2   3   5   7   7
(29,30]  4  0   1   2   4   5   7   7
(30,31]  4  0   1   2   4   5   7   7
(31,32]  4  1   1   2   4   6   7   7
(32,33]  4  0   1   2   4   5   6   7
(33,34]  4  1   1   2   4   5   7   7
(34,35]  4  1   1   2   4   5   7   7
(35,36]  4  1   1   2   4   5   7   7
(36,37]  4  1   1   2   3   5   6   7
(37,38]  4  0   1   2   4   5   6   7
(38,39]  4  0   1   2   4   5   6   7
(39,40]  4  0   1   2   4   5   6   7
(40,41]  4  1   1   2   4   5   6   7
(41,42]  4  1   1   2   4   5   6   7
(42,43]  4  1   1   2   4   5   6   7
(43,44]  4  1   1   2   4   5   6   7
(44,45]  4  1   1   2   4   5   6   7
(45,46]  4  1   1   2   4   5   6   6
(46,47]  4  1   1   3   4   5   6   6
(47,48]  3  1   1   2   3   5   6   6
(48,49]  4  1   1   2   4   5   6   6
(49,50]  3  1   1   2   4   5   6   6
(50,51]  4  0   1   2   4   5   6   6
(52,53]  3  1   1   2   3   4   5   6
(54,55]  3  0   1   1   3   4   5   6
(55,56]  3  0   1   1   2   4   5   6
(60,61]  2  0   0   1   1   3   4   5
(66,67]  1  0   0   0   1   2   2   3

Confidence intervals: check first the plots and logbooks,
next use f.spade.bootstrap.

===================================================================== 
   The SPADE output is saved in 
   output/0_SPADE_simone/ 
 
   -  Diagnostic plots       can be found in    1_plots 
   -  Log files              can be found in    2_logbooks 
   -  Excel output tables    can be found in    3_excel_tables 

   -  The model and table R-binaries in   4_r_binaries 
      are saved for experts in R 
=====================================================================
