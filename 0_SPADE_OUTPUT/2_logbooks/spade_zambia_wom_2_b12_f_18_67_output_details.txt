
Number of observations per person
  nr_obs nr_persons
1      1         59
2      2        307
Number of individuals with their number of ZERO intakes
  nr_ZERO_intakes nr_persons
1               0        109
2               1        132
3               2        125


======  Info data and model f.spade  ======


========================================
=====  Extra info about the data   =====
========================================

Number of observations per age
   ((explanation of first column:
    18  is age
    10 is number of observations for age 18 in sample
    1.49 is proportion(%) for age 18 in sample))
       18   19   20   21   22   23   24   25   26   27   28   29   30   31   32   33   34   35   36   37  
nobs 10   11   31   25   42   29   44   42   41   27   36   34   39   28   22   18   27   25   17   16  
%    1.49 1.63 4.61 3.71 6.24 4.31 6.54 6.24 6.09 4.01 5.35 5.05 5.79 4.16 3.27 2.67 4.01 3.71 2.53 2.38
                                                                                                        
     38   39   40   41   42   43   44   45   46  47   48  49   50   51   53   55   56   61   67 
nobs 15   18   14   4    8    4    6    12   2   4    2   3    4    1    1    4    4    1    2  
%    2.23 2.67 2.08 0.59 1.19 0.59 0.89 1.78 0.3 0.59 0.3 0.45 0.59 0.15 0.15 0.59 0.59 0.15 0.3
                                                                                                

Intake amounts are modelled with all positive intakes
For 1 - part model:
   if there are some zeros,
   these get all a positive value equal to 0.5 * min(positive values)
For 2 - part model:
   all positive amounts are used

f.spade model =  BCNfpBBcs  formula freq =  b12 ~ cs(age) + (1|id) 

f.spade: start modelling intake frequency with
b12 ~ cs(age)


======== Results modelling intake frequency ========

Summary of weights used in gamlss
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      1       1       1       1       1       1 
******************************************************************
Family:  c("BB", "Beta Binomial") 

Call:  gamlss(formula = frml.if.use, family = BB, data = spade.dt.if,  
    weights = gamlss.wghts, method = RS(), control = gamlss.control(trace = FALSE,  
        c.crit = 0.1, n.cyc = 100), i.control = glim.control()) 

Fitting method: RS() 

------------------------------------------------------------------
Mu link function:  logit
Mu Coefficients:
            Estimate Std. Error t value Pr(>|t|)  
(Intercept) -0.62093    0.33508  -1.853   0.0647 .
cs(age)      0.01251    0.01082   1.157   0.2482  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

------------------------------------------------------------------
Sigma link function:  log
Sigma Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  -1.1354     0.3066  -3.704 0.000245 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

------------------------------------------------------------------
NOTE: Additive smoothing terms exist in the formulas: 
 i) Std. Error for smoothers are for the linear effect only. 
ii) Std. Error for the linear terms may not be reliable. 
------------------------------------------------------------------
No. of observations in the fit:  366 
Degrees of Freedom for the fit:  6.000694
      Residual Deg. of Freedom:  359.9993 
                      at cycle:  3 
 
Global Deviance:     740.7628 
            AIC:     752.7642 
            SBC:     776.1827 
******************************************************************

**************************************************************
	 Summary of the Randomised Quantile Residuals

                             check   rResiduals theory
1                             mean  0.004354173      0
2                         variance  0.918778896      1
3                coef. of skewness -0.151062000      0
4                coef. of kurtosis  3.212160138      3
5 Filliben_correlation_coefficient  0.997999313      1
**************************************************************
NULL
========================================================

Fit of Box-Cox transformation parameter lambda
  log.lik lambda    LB   UB
1    -940  0.056 -0.02 0.13


==== Fractional Polynomial model results intake amounts ===

Call:
glm(formula = intake.trans ~ I((age/10)^1), data = spade.dt.ia)

Deviance Residuals: 
   Min      1Q  Median      3Q     Max  
 -3.69   -1.30   -0.11    1.37    4.89  

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)      1.280      0.359     3.6    4e-04 ***
I((age/10)^1)   -0.076      0.114    -0.7      0.5    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for gaussian family taken to be 2.454031)

    Null deviance: 710.28  on 290  degrees of freedom
Residual deviance: 709.21  on 289  degrees of freedom
AIC: 1091

Number of Fisher Scoring iterations: 2

===========================================================

Model results for the intake amounts
Linear mixed model fit by REML ['lmerMod']
Formula: intake.trans ~ I((age/10)^1) + (1 | id)
   Data: spade.dt.ia
Weights: spade.dt.ia[, weights.name]

REML criterion at convergence: 1088.4

Scaled residuals: 
   Min     1Q Median     3Q    Max 
-2.101 -0.779 -0.031  0.794  2.787 

Random effects:
 Groups   Name        Variance Std.Dev.
 id       (Intercept) 0.5      0.71    
 Residual             2.0      1.40    
Number of obs: 291, groups:  id, 221

Fixed effects:
              Estimate Std. Error t value
(Intercept)      1.284      0.372     3.4
I((age/10)^1)   -0.078      0.119    -0.7

Correlation of Fixed Effects:
            (Intr)
I((g/10)^1) -0.966
f.spade: Model saved in spade_zambia_wom_2_b12_f_18_67_model 

f.spade: start f.spade.pseudosampling
model.name = spade_zambia_wom_2_b12_f_18_67_model 
f.spade.pseudosampling:
   pseudo sample spade.ps has 36600 rows
f.spade.pseudosampling:
          (weighted ) sample mean = 2.814 
            mean habitual intakes = 3.11 

Statistics for only the positive intakes and habitual amounts
         (weighted ) sample mean = 6.508 
      mean pseudo sample amounts = 7.085 
         (weighted ) sample mean = 0.432 
  pseudo sample mean probability = 0.439 


f.spade: f.spade.backtrans2 started for back-transformation

   within-individual variance  = 1.96
   between-individual variance = 0.499
   ratio var.inner/var.between for intake amounts = 3.94

* * *  Statistics of observed and habitual intakes  * * *
                             (weighted) sample mean intake = 2.814
                          overall mean of habitual intakes = 3.11
    difference of mean HI mean from (weighted) sample mean = 10.493 %

spade output table
          AM   P5  P10  P25  P50  P75  P90   P95
(17,67] 3.11 0.30 0.53 1.14 2.27 4.13 6.68  8.76
(17,18] 3.52 0.39 0.60 1.39 2.58 4.75 7.75 10.71
(18,19] 3.58 0.42 0.68 1.30 2.73 4.64 7.86  9.48
(19,20] 3.35 0.35 0.57 1.19 2.40 4.41 7.48  9.68
(20,21] 3.12 0.29 0.53 1.08 2.21 4.19 6.77  9.09
(21,22] 3.14 0.28 0.50 1.10 2.22 4.11 6.71  8.79
(22,23] 3.02 0.24 0.43 1.03 2.18 4.08 6.46  8.64
(23,24] 2.91 0.26 0.46 1.00 2.06 3.94 6.45  8.41
(24,25] 2.97 0.23 0.45 1.01 2.13 3.99 6.48  8.36
(25,26] 2.99 0.23 0.43 1.05 2.12 3.96 6.43  8.43
(26,27] 2.87 0.25 0.46 1.00 2.08 3.81 6.20  7.95
(27,28] 3.07 0.26 0.49 1.08 2.21 3.98 6.76  9.08
(28,29] 2.97 0.32 0.54 1.11 2.15 3.99 6.22  7.77
(29,30] 3.23 0.35 0.60 1.19 2.36 4.26 7.00  8.93
(30,31] 3.23 0.33 0.57 1.23 2.37 4.32 6.95  9.21
(31,32] 3.04 0.29 0.52 1.18 2.29 4.09 6.47  8.58
(32,33] 3.28 0.33 0.56 1.17 2.41 4.32 6.94  8.94
(33,34] 3.13 0.37 0.64 1.24 2.34 4.22 6.71  9.04
(34,35] 3.20 0.38 0.60 1.20 2.43 4.18 6.78  8.86
(35,36] 3.06 0.32 0.54 1.20 2.28 4.02 6.39  8.34
(36,37] 3.15 0.39 0.67 1.28 2.42 4.12 6.56  8.38
(37,38] 3.24 0.38 0.61 1.20 2.46 4.17 7.07  9.02
(38,39] 3.15 0.32 0.57 1.22 2.24 4.14 6.63  9.00
(39,40] 3.11 0.43 0.67 1.30 2.36 4.05 6.52  8.12
(40,41] 3.29 0.27 0.66 1.28 2.33 4.79 6.96  8.81
(41,42] 3.17 0.43 0.76 1.29 2.42 4.00 6.80  8.51
(42,43] 3.60 0.36 0.68 1.49 2.74 4.90 7.53  8.84
(43,44] 3.29 0.41 0.63 1.53 2.61 4.63 6.52  8.20
(44,45] 3.39 0.52 0.75 1.36 2.62 4.40 6.81  9.03
(45,46] 3.43 0.74 1.01 1.61 2.78 4.43 6.29  7.26
(46,47] 3.18 0.44 0.65 1.35 2.08 4.10 7.13  9.48
(47,48] 3.39 0.44 0.71 1.26 2.62 4.47 7.77  9.34
(48,49] 3.43 0.52 0.84 1.52 2.71 4.67 6.54  7.69
(49,50] 3.35 0.41 0.70 1.33 2.50 4.71 7.30  8.87
(50,51] 2.60 0.26 0.52 1.11 2.11 3.71 5.47  7.00
(52,53] 2.95 0.46 0.66 1.02 2.30 4.11 6.06  7.42
(54,55] 2.75 0.37 0.53 1.01 2.09 3.59 5.79  6.95
(55,56] 2.71 0.31 0.42 0.80 2.02 3.79 5.66  7.03
(60,61] 1.63 0.13 0.19 0.58 1.35 2.31 3.13  3.67
(66,67] 1.03 0.04 0.06 0.16 0.53 1.35 2.57  3.18

Confidence intervals: check first the plots and logbooks,
next use f.spade.bootstrap.

===================================================================== 
   The SPADE output is saved in 
   0_SPADE_OUTPUT/ 
 
   -  Diagnostic plots       can be found in    1_plots 
   -  Log files              can be found in    2_logbooks 
   -  Excel output tables    can be found in    3_excel_tables 

   -  The model and table R-binaries in   4_r_binaries 
      are saved for experts in R 
=====================================================================
